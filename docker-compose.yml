version: "3.8"
services:
  zoo1:
    image: confluentinc/cp-zookeeper:latest
    hostname: zoo1
    container_name: zoo1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888;zoo3:2888:3888
    ports:
      - "2181:2181"
    volumes:
      - ./data/zoo1/data:/var/lib/zookeeper/data
      - ./data/zoo1/log:/var/lib/zookeeper/log
    networks:
      - vnstock-net

  zoo2:
    image: confluentinc/cp-zookeeper:latest
    hostname: zoo2
    container_name: zoo2
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888;zoo3:2888:3888
    volumes:
      - ./data/zoo2/data:/var/lib/zookeeper/data
      - ./data/zoo2/log:/var/lib/zookeeper/log
    networks:
      - vnstock-net
  zoo3:
    image: confluentinc/cp-zookeeper:latest
    hostname: zoo3
    container_name: zoo3
    ports:
      - "2183:2183"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2183
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888;zoo3:2888:3888
    volumes:
      - ./data/zoo3/data:/var/lib/zookeeper/data
      - ./data/zoo3/log:/var/lib/zookeeper/log
    networks:
      - vnstock-net

  kafka1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    volumes:
      - ./data/kafka1:/var/lib/kafka/data
    networks:
      - vnstock-net
  kafka2:
    image: confluentinc/cp-kafka:latest
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    volumes:
      - ./data/kafka2:/var/lib/kafka/data
    networks:
      - vnstock-net

  kafka3:
    image: confluentinc/cp-kafka:latest
    hostname: kafka3
    container_name: kafka3
    ports:
      - "9094:9094"
      - "29094:29094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:19094,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094,DOCKER://host.docker.internal:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    volumes:
      - ./data/kafka3:/var/lib/kafka/data
    networks:
      - vnstock-net
  namenode:
    image: bde2020/hadoop-namenode:latest
    container_name: namenode
    hostname: namenode
    ports:
      - "9870:9870"
      - "9000:9000"
    environment:
      - CLUSTER_NAME=vnstock
    env_file:
      - hadoop.env
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
    volumes:
      - ./data/hadoop/namenode:/hadoop/dfs/name
      - ./data/etc/hosts:/etc/hosts
    networks:
      - vnstock-net

  datanode-1:
    image: bde2020/hadoop-datanode:latest
    container_name: datanode-1
    hostname: datanode-1
    ports:
      - "9871:9871"
      - 29864:9864
    environment:
      - SERVICE_PRECONDITION=namenode:9870
    env_file:
      - hadoop.env
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    volumes:
    - ./data/hadoop/datanode-1:/hadoop/dfs/data
    - ./data/hadoop/datanode-1/etc/hosts:/etc/hosts
    networks:
      - vnstock-net

  datanode-2:
    image: bde2020/hadoop-datanode:latest
    container_name: datanode-2
    hostname: datanode-2
    ports:
      - "9872:9872"
      - "9866:9864"
    environment:
      - SERVICE_PRECONDITION=namenode:9870
    env_file:
      - hadoop.env
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    volumes:
    - ./data/hadoop/datanode-2:/hadoop/dfs/data
    - ./data/hadoop/datanode-2/etc/hosts:/etc/hosts
    networks:
      - vnstock-net

  cassandra:
    image: cassandra:latest
    container_name: cassandra
    hostname: cassandra
    env_file:
      - ./cassandra.env
    ports:
      - "9042:9042"
    volumes:
      - ./data/cassandra:/var/lib/cassandra
    networks:
      - vnstock-net

  spark-master:
    image: bde2020/spark-master:latest
    container_name: spark-master
    depends_on:
      - namenode
      - datanode-1
      - datanode-2
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    networks:
      - vnstock-net

  jupyterlab:
    image: jupyterlab-ver
    container_name: jupyterlab-ver
    ports:
      - 8888:8888
    networks:
      - vnstock-net

  spark-worker-1:
    image: bde2020/spark-worker:latest
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
#      - SPARK_WORKER_CORES=2
#      - SPARK_WORKER_MEMORY=2g
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    networks:
      - vnstock-net

  spark-worker-2:
    image: bde2020/spark-worker:latest
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8083:8083"
    environment:
#      - SPARK_WORKER_CORES=2
#      - SPARK_WORKER_MEMORY=2g
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    networks:
      - vnstock-net


networks:
  vnstock-net:
    name: mang-1
    driver: bridge